{"version":3,"sources":["components/section/Section.module.css","components/container/Container.js","components/notification/Notification.js","components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css","components/container/Container.module.css"],"names":["module","exports","Container","children","className","s","container","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","feedbackOptions","map","option","button","type","onClick","Section","title","section","App","state","handleFeedback","feedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,2B,0KCKbC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,OCOxBI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCiCEC,EA9BI,SAAC,GAAD,IACfC,EADe,EACfA,KACAC,EAFe,EAEfA,QACAC,EAHe,EAGfA,IACAC,EAJe,EAIfA,MACAC,EALe,EAKfA,mBALe,OAOjB,mCACGD,EAAQ,EACT,+BACM,+BAAI,cAAC,IAAD,IAAJ,eAA4BH,KAC5B,+BAAI,cAAC,IAAD,IAAJ,iBAAgCC,KAChC,+BAAI,cAAC,IAAD,IAAJ,cAAyBC,KACzB,+BAAI,cAAC,IAAD,IAAJ,gBAAkCC,KAClC,uDAA0BC,EAA1B,UAGJ,cAAC,EAAD,CAAcN,QAAQ,yB,gBCEbO,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,qBAAKb,UAAWC,IAAEa,gBAAlB,SACCF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEhB,UAAWC,IAAEgB,OACbC,KAAK,SACL,gBAAeF,EACfG,QAASN,EAJX,SAOGG,GAFIA,S,iBCGEI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,SAAV,OACZ,sBAAKC,UAAaC,IAAEqB,QAApB,UACA,6BAAKD,IACJtB,MCECa,EAAU,CAAC,OAAQ,UAAW,OAsDrBW,E,4MAlDbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,eAAiB,YAAe,IACvBC,EADsB,EAAZC,OACSC,QAAnBF,SACP,EAAKG,UAAS,SAAAC,GACZ,OAAO,eAAGJ,EAAWI,EAAUJ,GAAY,O,EAI/CK,mBAAqB,WACnB,OAAO,EAAKP,MAAMlB,KAAO,EAAKkB,MAAMjB,QAAU,EAAKiB,MAAMhB,K,EAG3DwB,gCAAkC,WAChC,IAAIvB,EAAQ,EAAKsB,qBACjB,OAAOtB,EAAQwB,KAAKC,MAAO,EAAKV,MAAMlB,KAAOG,EAAS,KAAO,G,4CAI/D,WACE,MAA8B0B,KAAKX,MAA3BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ0B,KAAKJ,qBACbK,EAA6BD,KAAKH,kCAExC,OACC,eAAC,EAAD,WACG,cAAC,EAAD,CAASX,MAAO,wBAAhB,SACA,cAAC,EAAD,CACET,QAASA,EACTC,gBAAiBsB,KAAKV,mBAGxB,cAAC,EAAD,CAASJ,MAAO,aAAhB,SACA,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB0B,a,GA5CZC,aCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B9C,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.b3552d94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2pCS6\"};","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport { ImHappy, ImNeutral, ImSad, ImCalculator } from \"react-icons/im\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Notification from '../notification/Notification';\r\n\r\nconst Statistics = ({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positivePercentage,\r\n}) => ( \r\n  <>\r\n    {total > 0 ? \r\n   (<ul>\r\n          <li><ImHappy /> -- Good:   {good}</li>\r\n          <li><ImNeutral /> -- Neutral:  {neutral}</li>\r\n          <li><ImSad /> -- Bad:   {bad}</li>\r\n          <li><ImCalculator /> -- Total:   {total}</li>\r\n          <li>Positive feedback:   {positivePercentage}%</li>\r\n    </ul>) \r\n    :\r\n    ( <Notification message=\"No feedback given\" />)\r\n    }\r\n  </>\r\n  );\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\"\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <div className={s.feedbackOptions}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        data-feedback={option}\r\n        onClick={onLeaveFeedback}\r\n        key={option}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\";\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div className = {s.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n    </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","//import './App.css';\nimport React, { Component } from 'react';\n\nimport Container from './components/container/Container';\nimport Statistics from './components/statistics/Statistics';\nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Section from './components/section/Section';\n\nconst options = ['good', 'neutral', 'bad'];\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  handleFeedback = ({target}) => {\n    const {feedback} = target.dataset;\n    this.setState(prevState => {\n      return { [feedback]: prevState[feedback] + 1 };\n    });\n  };\n  \n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let total = this.countTotalFeedback();\n    return total ? Math.round((this.state.good / total) * 100) : 0;\n  };\n\n \n  render() {\n    const { good, neutral, bad} = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n     <Container>\n        <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={this.handleFeedback}\n        />\n        </Section>\n        <Section title={'Statistics'}>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positiveFeedbackPercentage}\n        />\n        </Section>\n     </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2y9tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2WcpS\"};"],"sourceRoot":""}